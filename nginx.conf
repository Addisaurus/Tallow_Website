# Nginx Configuration for Tallow & Co. Flask Application
# This configuration serves as a reverse proxy in front of the Flask/Gunicorn application

# Upstream defines the Flask application server
upstream flask_app {
    # Reference to the Flask container
    # 'web' is the service name from docker-compose.yml
    server web:8000;
}

# Server block for HTTP
server {
    listen 80;
    server_name _;  # Replace with your domain in production (e.g., tallowandco.com www.tallowandco.com)

    # Maximum upload size (adjust if you need to upload larger product images)
    client_max_body_size 10M;

    # Access and error logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Serve static files directly (faster than proxying to Flask)
    location /static/ {
        alias /app/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Proxy all other requests to Flask application
    location / {
        proxy_pass http://flask_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (if needed in future)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://flask_app/health;
        access_log off;
    }

    # Security: Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# SSL/HTTPS Configuration (uncomment and configure when you have SSL certificates)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS (uncomment after testing)
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # Include all the location blocks from the HTTP server block above
#     client_max_body_size 10M;
#
#     location /static/ {
#         alias /app/static/;
#         expires 30d;
#         add_header Cache-Control "public, immutable";
#     }
#
#     location / {
#         proxy_pass http://flask_app;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }
# }
#
# # Redirect HTTP to HTTPS
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
